{"version":3,"sources":["../node_modules/peerjs/dist sync","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Alert","className","this","props","type","role","symbol","text","Component","host","document","location","hostname","socket","io","App","connect","setState","alertContent","my_form_disable","peer","Peer","state","my_name","path","port","emit","username","on","call","is_calling_one","other_form_disable","handleField","event","target","name","value","change_video","video_status","stream","getVideoTracks","enabled","change_audio","audio_status","getAudioTracks","call_user","my_username","other_username","other_name","answer_call","is_calling_two","call_btn_disabled","answer","otherdata","current","srcObject","cut_call","emit_event","close","clearInterval","call_cut_interval_id","componentDidMount","navigator","mediaDevices","getUserMedia","video","audio","then","owndata","catch","err","alert","data","call_cut_id","setInterval","remoteStream","recepient","React","createRef","onClick","class","placeholder","aria-label","aria-describedby","onChange","disabled","ref","autoPlay","muted","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"2HAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,I,2ICNJC,E,4JAEjB,WACI,OACE,sBACEC,UAAS,sBAAiBC,KAAKC,MAAMC,KAA5B,mCACTC,KAAK,QAFP,UAIE,iCAASH,KAAKC,MAAMG,SAJtB,IAIwCJ,KAAKC,MAAMI,Y,GAR1BC,a,iBCE/BC,EAAI,iBAAaC,SAASC,SAASC,SAA/B,UACJC,EAASC,aAAGL,GACKM,E,kDACnB,WAAYZ,GAAQ,IAAD,8BACjB,cAAMA,IAuBRa,QAAU,WAER,EAAKC,SAAS,CACZC,aACE,cAAC,EAAD,CACEd,KAAK,UACLE,OAAO,UACPC,KAAK,qCAGTY,iBAAiB,IAInB,IAAMC,EAAO,IAAIC,IAAK,EAAKC,MAAMC,QAAS,CACxCC,KAAM,QACNf,KAAM,IACNgB,KAAM,MAER,EAAKR,SAAS,CAAEG,KAAMA,IAGtBP,EAAOa,KAAK,kBAAmB,CAAEC,SAAU,EAAKL,MAAMC,UAGtDH,EAAKQ,GAAG,QAAQ,SAACC,GACf,EAAKZ,SAAS,CACZY,KAAMA,EACNC,gBAAgB,EAChBC,oBAAoB,QArDP,EA0DnBC,YAAc,SAACC,GACb,EAAKhB,SAAL,eACGgB,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,SA5DnB,EAiEnBC,aAAe,YACmB,IAA5B,EAAKf,MAAMgB,eACb,EAAKrB,SAAS,CAAEqB,cAAc,IAC9B,EAAKhB,MAAMiB,OAAOC,iBAAiB,GAAGC,SAAU,IAElB,IAA5B,EAAKnB,MAAMgB,eACb,EAAKrB,SAAS,CAAEqB,cAAc,IAC9B,EAAKhB,MAAMiB,OAAOC,iBAAiB,GAAGC,SAAU,IAxEjC,EA6EnBC,aAAe,YACmB,IAA5B,EAAKpB,MAAMqB,eACb,EAAK1B,SAAS,CAAE0B,cAAc,IAC9B,EAAKrB,MAAMiB,OAAOK,iBAAiB,GAAGH,SAAU,IAElB,IAA5B,EAAKnB,MAAMqB,eACb,EAAK1B,SAAS,CAAE0B,cAAc,IAC9B,EAAKrB,MAAMiB,OAAOK,iBAAiB,GAAGH,SAAU,IApFjC,EAwFnBI,UAAY,WAEV,EAAK5B,SAAS,CACZC,aACE,cAAC,EAAD,CACEd,KAAK,UACLE,OAAO,UACPC,KAAK,gCAGTwB,oBAAoB,IAGtBlB,EAAOa,KAAK,YAAa,CACvBoB,YAAa,EAAKxB,MAAMC,QACxBwB,eAAgB,EAAKzB,MAAM0B,cAvGZ,EA2GnBC,YAAc,WACZ,EAAKhC,SAAS,CACZa,gBAAgB,EAChBoB,gBAAgB,EAChBC,mBAAmB,EACnBpB,oBAAoB,EACpBb,aACE,cAAC,EAAD,CAAOd,KAAK,UAAUE,OAAO,OAAOC,KAAK,wBAI7CM,EAAOa,KAAK,cAAe,CACzBqB,eAAgB,EAAKzB,MAAM0B,aAI7B,EAAK1B,MAAMO,KAAKuB,OAAO,EAAK9B,MAAMiB,QAGlC,EAAKjB,MAAMO,KAAKD,GAAG,UAAU,SAACW,GAC5B,EAAKc,UAAUC,QAAQC,UAAYhB,KAIrC,EAAKjB,MAAMO,KAAKD,GAAG,SAAS,WAC1B,EAAKX,SAAS,CACZC,aAAc,cAAC,EAAD,CAAOd,KAAK,SAASE,OAAO,MAAMC,KAAK,kBACrDwB,oBAAoB,EACpBoB,mBAAmB,QAvIN,EA4InBK,SAAW,WAGT,IAAIC,EADJ,EAAKnC,MAAMO,KAAK6B,SAGgB,IAA9B,EAAKpC,MAAM4B,iBACmB,IAA9B,EAAK5B,MAAMQ,eAEX2B,EAAa,eAEbE,cAAc,EAAKrC,MAAMsC,sBACzBH,EAAa,YAGf,EAAKxC,SAAS,CACZc,oBAAoB,EACpBoB,mBAAmB,EACnBrB,gBAAgB,EAChBoB,gBAAgB,EAChBhC,aACE,cAAC,EAAD,CAAOd,KAAK,SAASE,OAAO,OAAOC,KAAK,oBAK5CM,EAAOa,KAAK+B,EAAY,CACtBV,eAAgB,EAAKzB,MAAM0B,cAtKZ,EA0KnBa,kBAAoB,WAClBC,UAAUC,aACPC,aAAa,CAAEC,OAAO,EAAMC,OAAO,IACnCC,MAAK,SAAC5B,GACL,EAAKtB,SAAS,CAAEsB,OAAQA,IACxB,EAAK6B,QAAQd,QAAQC,UAAY,EAAKjC,MAAMiB,UAE7C8B,OAAM,SAACC,GACNC,MAAMD,MAIVzD,EAAOe,GAAG,mBAAmB,SAAC4C,GAC5B,IAAI9E,EAAO8E,EAAK9E,KACH,SAATA,GACF,EAAKuB,SAAS,CACZC,aACE,cAAC,EAAD,CACEd,KAAK,SACLE,OAAO,iBACPC,KAAK,iDAGTY,iBAAiB,IAGR,SAATzB,GACF,EAAKuB,SAAS,CACZC,aACE,cAAC,EAAD,CACEd,KAAK,UACLE,OAAO,kBACPC,KAAK,8DAGTY,iBAAiB,EACjBY,oBAAoB,OAK1BlB,EAAOe,GAAG,aAAa,SAAC4C,GACtB,IAAI9E,EAAO8E,EAAK9E,KAGhB,GAAa,SAATA,EAAiB,CACnB,EAAKuB,SAAS,CACZC,aACE,cAAC,EAAD,CAAOd,KAAK,UAAUE,OAAO,UAAUC,KAAK,qBAE9C4C,mBAAkB,IAEpB,IAAIJ,EAAiByB,EAAKzB,eAGpBlB,EAAO,EAAKP,MAAMF,KAAKS,KAAKkB,EAAgB,EAAKzB,MAAMiB,QAC7D,EAAKtB,SAAS,CAAEY,KAAMA,IAEtB,IAAI4C,EAAYC,aAAY,WAC1B,EAAKzD,SAAS,CACZC,aACE,cAAC,EAAD,CACEd,KAAK,SACLE,OAAO,gBACPC,KAAI,UAAK,EAAKe,MAAM0B,WAAhB,iCAGRjB,oBAAoB,EACpBoB,mBAAmB,IAEpBtC,EAAOa,KAAK,WAAY,CACtBqB,eAAgB,EAAKzB,MAAM0B,eAE9B,KAEF,EAAK/B,SAAS,CAAC2C,qBAAqBa,IAEpC,EAAKnD,MAAMO,KAAKD,GAAG,UAAU,SAAC+C,GAC5B,EAAKtB,UAAUC,QAAQC,UAAYoB,KAIrC,EAAKrD,MAAMO,KAAKD,GAAG,SAAS,WAC1B,EAAKX,SAAS,CACZC,aACE,cAAC,EAAD,CAAOd,KAAK,SAASE,OAAO,MAAMC,KAAK,kBAEzCwB,oBAAoB,EACpBoB,mBAAmB,OAMZ,SAATzD,GACF,EAAKuB,SAAS,CACZ+B,WAAYwB,EAAKzB,eACjBG,gBAAgB,EAChBnB,oBAAoB,EACpBb,aAAa,+BAKJ,SAATxB,GACF,EAAKuB,SAAS,CACZC,aACE,cAAC,EAAD,CACEd,KAAK,SACLE,OAAO,YACPC,KAAK,0BAGTwB,oBAAoB,OAM1BlB,EAAOe,GAAG,eAAe,WACvB,EAAKX,SAAS,CACZkC,mBAAmB,EACnBpB,oBAAoB,IAEtB4B,cAAc,EAAKrC,MAAMsC,yBAI3B/C,EAAOe,GAAG,YAAY,WACpB,EAAKX,SAAS,CACZC,aAAc,cAAC,EAAD,CAAOd,KAAK,SAASE,OAAO,MAAMC,KAAK,kBACrDwB,oBAAoB,EACpBoB,mBAAmB,EACnBrB,gBAAe,EACfoB,gBAAe,OAKnBrC,EAAOe,GAAG,eAAe,WACvB,EAAKX,SAAS,CACZC,aACE,cAAC,EAAD,CACEd,KAAK,SACLE,OAAO,SACPC,KAAI,UAAK,EAAKe,MAAM0B,WAAhB,iCAGRjB,oBAAoB,EACpBoB,mBAAmB,QA5TvB,EAAK7B,MAAQ,CACXsC,qBAAqB,GACrBjB,cAAc,EACdL,cAAc,EACdT,KAAM,KACNT,KAAM,KACNmB,OAAQ,KACRY,mBAAmB,EACnBrB,gBAAgB,EAChBoB,gBAAgB,EAChB0B,UAAW,GACXrD,QAAS,GACTyB,WAAY,GACZ9B,aAAc,6BACdC,iBAAiB,EACjBY,oBAAoB,GAEtB,EAAKqC,QAAUS,IAAMC,YACrB,EAAKzB,UAAYwB,IAAMC,YArBN,E,0CAmUnB,WACE,OACE,eAAC,WAAD,WACG5E,KAAKoB,MAAMJ,cAEmB,IAA9BhB,KAAKoB,MAAMQ,iBACkB,IAA9B5B,KAAKoB,MAAM4B,eACT,sBAAKjD,UAAU,wDAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,oBAAGA,UAAU,kBAAb,UACE,wBAAQA,UAAU,OAAlB,SAA0BC,KAAKoB,MAAM0B,aADvC,yBAKF,sBAAK/C,UAAU,kBAAf,UACE,wBACEA,UAAU,iCACV8E,QAAS7E,KAAK+C,YAFhB,SAIE,mBAAG+B,MAAM,mBAEX,wBACE/E,UAAU,gCACV8E,QAAS7E,KAAKsD,SAFhB,SAIE,mBAAGwB,MAAM,+BAKf,6BAIF,sBAAK/E,UAAU,mDAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,sBAAK+E,MAAM,mBAAX,UACE,sBAAMA,MAAM,mBAAmBjF,GAAG,eAAlC,uBAGA,uBACEK,KAAK,OACL4E,MAAM,eACNC,YAAY,WACZC,aAAW,WACXC,mBAAiB,eACjB/C,MAAOlC,KAAKoB,MAAMC,QAClBY,KAAK,UACLiD,SAAUlF,KAAK8B,YACfqD,SAAUnF,KAAKoB,MAAMH,kBAEvB,wBACElB,UAAU,6BACV8E,QAAS7E,KAAKc,QACdqE,SAAUnF,KAAKoB,MAAMH,gBAHvB,SAKE,mBAAG6D,MAAM,uBAKf,qBAAK/E,UAAU,kBAAf,SACE,sBAAK+E,MAAM,mBAAX,UACE,sBAAMA,MAAM,mBAAmBjF,GAAG,eAAlC,wBAGA,uBACEK,KAAK,OACL4E,MAAM,eACNC,YAAY,WACZC,aAAW,WACXC,mBAAiB,eACjB/C,MAAOlC,KAAKoB,MAAM0B,WAClBb,KAAK,aACLiD,SAAUlF,KAAK8B,YACfqD,SAAUnF,KAAKoB,MAAMS,qBAEvB,wBACE9B,UAAU,6BACV8E,QAAS7E,KAAK2C,UACdwC,SAAUnF,KAAKoB,MAAMS,mBAHvB,SAKE,mBAAGiD,MAAM,2BAOjB,sBAAK/E,UAAU,mDAAf,UACE,qBAAKA,UAAU,+CAAf,SACE,uBACEA,UAAU,sBACVqF,IAAKpF,KAAKkE,QACVmB,UAAQ,EACRC,OAAK,MAGT,qBAAKvF,UAAU,+CAAf,SACE,uBACEA,UAAU,sBACVqF,IAAKpF,KAAKmD,UACVkC,UAAQ,SAMd,sBAAKtF,UAAU,mDAAf,UACE,wBACEA,UAAS,qBACqB,IAA5BC,KAAKoB,MAAMgB,aAAwB,cAAgB,aAD5C,aAGTyC,QAAS7E,KAAKmC,aAJhB,SAME,mBAAG2C,MAAM,mBAEX,wBACE/E,UAAS,qBACqB,IAA5BC,KAAKoB,MAAMqB,aAAwB,cAAgB,aAD5C,aAGToC,QAAS7E,KAAKwC,aAJhB,SAME,mBAAGsC,MAAM,uBAEX,wBACE/E,UAAU,iCACV8E,QAAS7E,KAAKsD,SACd6B,SAAUnF,KAAKoB,MAAM6B,kBAHvB,SAKE,mBAAG6B,MAAM,mC,GAtcYxE,aCMlBiF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACH,cAAC,EAAD,IACHxF,SAASyF,eAAe,SAM3BV,M","file":"static/js/main.71f558c3.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 76;","import React, { Component } from 'react'\r\nimport \"./css/alert.css\"\r\nexport default class Alert extends Component {\r\n    \r\n    render() {\r\n        return (\r\n          <div\r\n            className={`alert alert-${this.props.type} alert-dismissible custom-alert`}\r\n            role=\"alert\"\r\n          >\r\n            <strong>{this.props.symbol}</strong> {this.props.text}\r\n          </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport Alert from \"./components/Alert\";\r\nimport Peer from \"peerjs\";\r\nlet host = `http://${document.location.hostname}:8000/`;\r\nlet socket = io(host);\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      call_cut_interval_id:\"\",\r\n      audio_status: true,\r\n      video_status: true,\r\n      call: null,\r\n      peer: null,\r\n      stream: null,\r\n      call_btn_disabled: true,\r\n      is_calling_one: false,\r\n      is_calling_two: false,\r\n      recepient: \"\",\r\n      my_name: \"\",\r\n      other_name: \"\",\r\n      alertContent: <></>,\r\n      my_form_disable: false,\r\n      other_form_disable: true,\r\n    };\r\n    this.owndata = React.createRef();\r\n    this.otherdata = React.createRef();\r\n  }\r\n\r\n  connect = () => {\r\n    // sending auser name to the server\r\n    this.setState({\r\n      alertContent: (\r\n        <Alert\r\n          type=\"warning\"\r\n          symbol=\"Waiting\"\r\n          text=\"Please wait for the server reply\"\r\n        />\r\n      ),\r\n      my_form_disable: true,\r\n    });\r\n\r\n    // initating a peer\r\n    const peer = new Peer(this.state.my_name, {\r\n      path: \"/chat\",\r\n      host: \"/\",\r\n      port: 8000,\r\n    });\r\n    this.setState({ peer: peer });\r\n\r\n    // sending the username to the server\r\n    socket.emit(\"username_submit\", { username: this.state.my_name });\r\n\r\n    // waiing for any call\r\n    peer.on(\"call\", (call) => {\r\n      this.setState({\r\n        call: call,\r\n        is_calling_one: true,\r\n        other_form_disable: true,\r\n      });\r\n    });\r\n  };\r\n\r\n  handleField = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  // on or off my video\r\n  change_video = () => {\r\n    if (this.state.video_status === true) {\r\n      this.setState({ video_status: false });\r\n      this.state.stream.getVideoTracks()[0].enabled = false;\r\n    }\r\n    if (this.state.video_status === false) {\r\n      this.setState({ video_status: true });\r\n      this.state.stream.getVideoTracks()[0].enabled = true;\r\n    }\r\n  };\r\n\r\n  // on or off my audio\r\n  change_audio = () => {\r\n    if (this.state.audio_status === true) {\r\n      this.setState({ audio_status: false });\r\n      this.state.stream.getAudioTracks()[0].enabled = false;\r\n    }\r\n    if (this.state.audio_status === false) {\r\n      this.setState({ audio_status: true });\r\n      this.state.stream.getAudioTracks()[0].enabled = true;\r\n    }\r\n  };\r\n\r\n  call_user = () => {\r\n    // sendig data to the server so that the server could send the notofication about call to the peer\r\n    this.setState({\r\n      alertContent: (\r\n        <Alert\r\n          type=\"warning\"\r\n          symbol=\"Waiting\"\r\n          text=\"seaching for the username .\"\r\n        />\r\n      ),\r\n      other_form_disable: true,\r\n    });\r\n\r\n    socket.emit(\"call_user\", {\r\n      my_username: this.state.my_name,\r\n      other_username: this.state.other_name,\r\n    });\r\n  };\r\n\r\n  answer_call = () => {\r\n    this.setState({\r\n      is_calling_one: false,\r\n      is_calling_two: false,\r\n      call_btn_disabled: false,\r\n      other_form_disable: true,\r\n      alertContent: (\r\n        <Alert type=\"success\" symbol=\"Call\" text=\"Accepted the call\" />\r\n      ),\r\n    });\r\n    // send message to the caller that the receiver accepted the call\r\n    socket.emit(\"call_accept\", {\r\n      other_username: this.state.other_name,\r\n    });\r\n\r\n    // answer the call with media stream\r\n    this.state.call.answer(this.state.stream);\r\n\r\n    // listenning for the streaming data of the caller\r\n    this.state.call.on(\"stream\", (stream) => {\r\n      this.otherdata.current.srcObject = stream;\r\n    });\r\n\r\n    // if the caller cut the call\r\n    this.state.call.on(\"close\", () => {\r\n      this.setState({\r\n        alertContent: <Alert type=\"danger\" symbol=\"End\" text=\"Call is ended\" />,\r\n        other_form_disable: false,\r\n        call_btn_disabled: true,\r\n      });\r\n    });\r\n  };\r\n\r\n  cut_call = () => {\r\n    // closing the call\r\n    this.state.call.close();\r\n    let emit_event;\r\n    if (\r\n      this.state.is_calling_two === true &&\r\n      this.state.is_calling_one === true\r\n    ) {\r\n      emit_event = \"call_reject\";\r\n    } else {\r\n      clearInterval(this.state.call_cut_interval_id)\r\n      emit_event = \"call_end\";\r\n    }\r\n\r\n    this.setState({\r\n      other_form_disable: false,\r\n      call_btn_disabled: true,\r\n      is_calling_one: false,\r\n      is_calling_two: false,\r\n      alertContent: (\r\n        <Alert type=\"danger\" symbol=\"Call\" text=\"Call is ended\" />\r\n      ),\r\n    });\r\n\r\n    // sending message to caller that the call is ended\r\n    socket.emit(emit_event, {\r\n      other_username: this.state.other_name,\r\n    });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: true, audio: true })\r\n      .then((stream) => {\r\n        this.setState({ stream: stream });\r\n        this.owndata.current.srcObject = this.state.stream;\r\n      })\r\n      .catch((err) => {\r\n        alert(err);\r\n      });\r\n\r\n    // getting information about the username which user has submitted\r\n    socket.on(\"username_submit\", (data) => {\r\n      let code = data.code;\r\n      if (code === \"3000\") {\r\n        this.setState({\r\n          alertContent: (\r\n            <Alert\r\n              type=\"danger\"\r\n              symbol=\"Username error\"\r\n              text=\"Username is already exist , choose another .\"\r\n            />\r\n          ),\r\n          my_form_disable: false,\r\n        });\r\n      }\r\n      if (code === \"2000\") {\r\n        this.setState({\r\n          alertContent: (\r\n            <Alert\r\n              type=\"success\"\r\n              symbol=\"Connect success\"\r\n              text=\"Connection is successfully established . You can chat now\"\r\n            />\r\n          ),\r\n          my_form_disable: true,\r\n          other_form_disable: false,\r\n        });\r\n      }\r\n    });\r\n\r\n    socket.on(\"call_user\", (data) => {\r\n      let code = data.code;\r\n\r\n      // getting verification about the other username\r\n      if (code === \"2001\") {\r\n        this.setState({\r\n          alertContent: (\r\n            <Alert type=\"success\" symbol=\"Calling\" text=\"Calling the user\" />\r\n          ),\r\n          call_btn_disabled:false\r\n        });\r\n        let other_username = data.other_username;\r\n\r\n        // call the peer\r\n        const call = this.state.peer.call(other_username, this.state.stream);\r\n        this.setState({ call: call });\r\n\r\n        let call_cut_id=setInterval(()=>{\r\n          this.setState({\r\n            alertContent: (\r\n              <Alert\r\n                type=\"danger\"\r\n                symbol=\"Not answering\"\r\n                text={`${this.state.other_name} is not answering your call`}\r\n              />\r\n            ),\r\n            other_form_disable: false,\r\n            call_btn_disabled: true,\r\n          });\r\n           socket.emit(\"call_end\", {\r\n             other_username: this.state.other_name,\r\n           });\r\n        },20000)\r\n\r\n        this.setState({call_cut_interval_id:call_cut_id})\r\n\r\n        this.state.call.on(\"stream\", (remoteStream) => {\r\n          this.otherdata.current.srcObject = remoteStream;\r\n        });\r\n\r\n        // if the caller cut the call\r\n        this.state.call.on(\"close\", () => {\r\n          this.setState({\r\n            alertContent: (\r\n              <Alert type=\"danger\" symbol=\"End\" text=\"Call is ended\" />\r\n            ),\r\n            other_form_disable: false,\r\n            call_btn_disabled: true,\r\n          });\r\n        });\r\n      }\r\n\r\n      // if anyone calling me\r\n      if (code === \"2002\") {\r\n        this.setState({\r\n          other_name: data.other_username,\r\n          is_calling_two: true,\r\n          other_form_disable: true,\r\n          alertContent:<></>\r\n        });\r\n      }\r\n\r\n      // if the other username is not founded the server\r\n      if (code === \"3001\") {\r\n        this.setState({\r\n          alertContent: (\r\n            <Alert\r\n              type=\"danger\"\r\n              symbol=\"Not found\"\r\n              text=\"Username is not found\"\r\n            />\r\n          ),\r\n          other_form_disable: false,\r\n        });\r\n      }\r\n    });\r\n\r\n    // if our peer received our call\r\n    socket.on(\"call_accept\", () => {\r\n      this.setState({\r\n        call_btn_disabled: false,\r\n        other_form_disable: true,\r\n      });\r\n      clearInterval(this.state.call_cut_interval_id);\r\n    });\r\n\r\n    //if my peer ended mycall\r\n    socket.on(\"call_end\", () => {\r\n      this.setState({\r\n        alertContent: <Alert type=\"danger\" symbol=\"End\" text=\"Call is ended\" />,\r\n        other_form_disable: false,\r\n        call_btn_disabled: true,\r\n        is_calling_one:false,\r\n        is_calling_two:false\r\n      });\r\n    });\r\n\r\n    // if my peer rejected my call\r\n    socket.on(\"call_reject\", () => {\r\n      this.setState({\r\n        alertContent: (\r\n          <Alert\r\n            type=\"danger\"\r\n            symbol=\"Reject\"\r\n            text={`${this.state.other_name} is not answering your call`}\r\n          />\r\n        ),\r\n        other_form_disable: false,\r\n        call_btn_disabled: true,\r\n      });\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        {this.state.alertContent}\r\n        {/*pick up call or not*/}\r\n        {this.state.is_calling_one === true &&\r\n        this.state.is_calling_two === true ? (\r\n          <div className=\"mt-4 custom-container rounded row navbar-dark bg-dark\">\r\n            <div className=\"col-lg-8 col-11\">\r\n              <p className=\"fs-2 text-light\">\r\n                <strong className=\"fs-2\">{this.state.other_name}</strong> is\r\n                calling you .\r\n              </p>\r\n            </div>\r\n            <div className=\"col-lg-4 col-11\">\r\n              <button\r\n                className=\"col-2 btn btn-primary fs-4 m-1\"\r\n                onClick={this.answer_call}\r\n              >\r\n                <i class=\"fas fa-phone\"></i>\r\n              </button>\r\n              <button\r\n                className=\"col-2 btn btn-danger fs-4 m-1\"\r\n                onClick={this.cut_call}\r\n              >\r\n                <i class=\"fas fa-phone-slash\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        {/*own and other user name form*/}\r\n        <div className=\"row justify-content-around mt-4 custom-container\">\r\n          <div className=\"col-lg-6 col-11\">\r\n            <div class=\"input-group mb-3\">\r\n              <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                Your name\r\n              </span>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                placeholder=\"Username\"\r\n                aria-label=\"Username\"\r\n                aria-describedby=\"basic-addon1\"\r\n                value={this.state.my_name}\r\n                name=\"my_name\"\r\n                onChange={this.handleField}\r\n                disabled={this.state.my_form_disable}\r\n              />\r\n              <button\r\n                className=\"btn btn-primary fs-4 col-2\"\r\n                onClick={this.connect}\r\n                disabled={this.state.my_form_disable}\r\n              >\r\n                <i class=\"fas fa-plug\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-lg-6 col-11\">\r\n            <div class=\"input-group mb-3\">\r\n              <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                Other name\r\n              </span>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                placeholder=\"Username\"\r\n                aria-label=\"Username\"\r\n                aria-describedby=\"basic-addon1\"\r\n                value={this.state.other_name}\r\n                name=\"other_name\"\r\n                onChange={this.handleField}\r\n                disabled={this.state.other_form_disable}\r\n              />\r\n              <button\r\n                className=\"col-2 btn btn-primary fs-4\"\r\n                onClick={this.call_user}\r\n                disabled={this.state.other_form_disable}\r\n              >\r\n                <i class=\"fas fa-phone\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/*own and other user web cam viewer*/}\r\n        <div className=\"row justify-content-around mt-4 custom-container\">\r\n          <div className=\"col-lg-4 col-10 rounded p-2 custom-video-box\">\r\n            <video\r\n              className=\"custom-video-player\"\r\n              ref={this.owndata}\r\n              autoPlay\r\n              muted\r\n            ></video>\r\n          </div>\r\n          <div className=\"col-lg-4 col-10 rounded p-2 custom-video-box\">\r\n            <video\r\n              className=\"custom-video-player\"\r\n              ref={this.otherdata}\r\n              autoPlay\r\n            ></video>\r\n          </div>\r\n        </div>\r\n\r\n        {/*own stream controller*/}\r\n        <div className=\"row justify-content-around mt-4 custom-container\">\r\n          <button\r\n            className={`col-2 btn ${\r\n              this.state.video_status === true ? \"btn-primary\" : \"btn-danger\"\r\n            } fs-2 p-2`}\r\n            onClick={this.change_video}\r\n          >\r\n            <i class=\"fas fa-video\"></i>\r\n          </button>\r\n          <button\r\n            className={`col-2 btn ${\r\n              this.state.audio_status === true ? \"btn-primary\" : \"btn-danger\"\r\n            } fs-2 p-2`}\r\n            onClick={this.change_audio}\r\n          >\r\n            <i class=\"fas fa-volume-up\"></i>\r\n          </button>\r\n          <button\r\n            className=\"col-2 btn btn-primary fs-2 p-2\"\r\n            onClick={this.cut_call}\r\n            disabled={this.state.call_btn_disabled}\r\n          >\r\n            <i class=\"fas fa-phone-slash\"></i>\r\n          </button>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nReactDOM.render(\r\n      <App />\r\n , document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}